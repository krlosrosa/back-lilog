version: '3.8'

services:
  back-produtividade:
    build:
      context: .
      args:
        - DATABASE_URL=${DATABASE_URL}
    container_name: back-produtividade
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=${DATABASE_URL}
      - PORT=${PORT:-4000}
    # A seção 'ports' foi removida. Traefik gerencia o acesso externo.
    networks:
      - proxy
    labels:
      # --- Habilita o Traefik para este serviço ---
      - "traefik.enable=true"
      
      # --- Roteador para HTTP (Porta 80) ---
      # Define a regra de Host para tráfego HTTP
      - "traefik.http.routers.produtividade-http.rule=Host(`${PRODUTIVIDADE_HOST}`)"
      # Define o ponto de entrada como 'web' (porta 80)
      - "traefik.http.routers.produtividade-http.entrypoints=web"
      # Aplica o middleware para redirecionar para HTTPS
      - "traefik.http.routers.produtividade-http.middlewares=redirect-to-https"

      # --- Roteador para HTTPS (Porta 443) ---
      # Define a regra de Host para tráfego seguro
      - "traefik.http.routers.produtividade-https.rule=Host(`${PRODUTIVIDADE_HOST}`)"
      # Define o ponto de entrada como 'websecure' (porta 443)
      - "traefik.http.routers.produtividade-https.entrypoints=websecure"
      # Habilita TLS/SSL
      - "traefik.http.routers.produtividade-https.tls=true"
      # Especifica o resolvedor de certificados (ex: Let's Encrypt)
      - "traefik.http.routers.produtividade-https.tls.certresolver=letsencrypt" # Verifique se 'leresolver' é o nome correto do seu resolver no Traefik
      # Aplica o middleware de cabeçalhos de segurança
      - "traefik.http.routers.produtividade-https.middlewares=security-headers"
      
      # --- Definição do Serviço ---
      # Aponta o tráfego para a porta interna do contêiner
      - "traefik.http.services.produtividade.loadbalancer.server.port=4000"

networks:
  proxy:
    external: true
    # Simplifiquei a declaração da rede. O nome usado no serviço é o mesmo da rede externa.